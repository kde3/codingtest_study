'''
문제1
산 모양 타일링

한 변의 길이가 1인 정삼각형 2n+1개를 이어붙여
길이가 n, 아랫변의 길이가 n+1인 사다리꼴을 만든다
사다리꼴의 윗변과 변을 공유하는 n개의 정삼각형 중 
일부의 위쪽에 같은 크기의 정삼각형을 붙여 새로운 모양을 만든다

이렇게 만든 모양을 정삼각형 타일 또는 정삼각형 2개를 이어 붙인 
마름모 타일로 빈 곳이 없도록 채운다
정삼각형, 마름모 타일은 돌려서 사용할 수 있다
단, 다른 타일과 겹치거나 모양을 벗어나게 놓을수는 없다

사다리꼴의 윗변의 길이 n
사다리꼴 윗변에 붙인 정삼각형을 나타내는 정수 배열 tops
위 설명으로 만든 모양을 정삼각형 또는 마름모 타일로 
빈 곳이 없도록 채우는 경우의 수를 10007로 나눈 나머지 return 

'''

# n = int(input())
# tops = list(map(int, input().split()))

n = 2            # 사다리꼴 윗변길이 
tops = [0, 1]    # 0: 사다리꼴 윗변과 변을 공유하는 정삼각형이 없다. 
                 # 1: 사다리꼴 윗변과 변을 공유하는 정삼각형이 있다.
a = [0]*(n+1)     
b = [0]*(n+1)
a[0] = 0
b[0] = 1

def solution(n, tops):
    result = 0
    for i in range(1, n+1):
        if tops[i-1] == 1:    # i-1번째 역정삼각형 위에 정삼각형이 있는 경우
            a[i] = a[i-1] + b[i-1]
            b[i] = 2*a[i-1] + 3*b[i-1]
        else:                 # i-1번째 역정삼각형 위에 정삼각형이 없는 경우
            a[i] = a[i-1] + b[i-1]
            b[i] = a[i-1] + 2*b[i-1]
    
    result = (a[n]+b[n]) % 10007
    print(result)

    return 

solution(n, tops)


'''

답]
아래 방향 정삼각형의 개수는 사다리꼴의 윗변의 길이인 n, 
먼저 아래 방향 정삼각형 n개를 어떻게 덮을지 결정하고 
남은 부분을 모두 정삼각형 타일로 덮는 경우의 수

1. 위쪽 정삼각형과 함께 마름모 타일로 덮기
2. 왼쪽 정삼각형과 함께 마름모 타일로 덮기
3. 오른쪽 정삼각형과 함께 마름모 타일로 덮기
4. 정삼각형 타일로 덮기

a[k] = k번째 아래 방향 정삼각형까지 덮되, 
       k번째 아래 방향 정삼각형을 덮는 방법이 3번 방법인 경우의 수
b[k] = k번째 아래 방향 정삼각형까지 덮되, 
       k번째 아래 방향 정삼각형을 덮는 방법이 3번 방법이 아닌 경우의 수
=>a[k]+b[k]


'''